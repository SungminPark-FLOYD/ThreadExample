프로세스와 프로그램
실행 전 상태 -> 프로그램
실행 중인 프로그램 -> 프로세스
    -> 자원과 스레드로 구성

쓰레드 : 프로세스 내에서 실제 작업을 수행
        모든 프로세스는 하나 이상의 쓰레드를 가지고 있다.

        `프로세스 : 쓰레드 = 공장 : 일꾼`

싱글 쓰레드 프로세스 : 자원 + 쓰레드
멀티 쓰레드 프로세스 : 자원 + 쓰레드 + 쓰레드 + 쓰레드 + 쓰레드 ...

멀티 프로세스 vs 멀티쓰레드 :
    새로운 프로세스 생성보다 새로운 쓰레드 생성 비용이 더 적다

멀티 쓰레드의 장단점

장점
- 자원을 보다 효율적으로 사용할 수 있다
- 사용자에 대한 응답성이 향상된다
- 작업이 불리되어 코드가 간결해진다

단점
- 동기화에 주의해야한다
- 교착상태(dead-lock)가 발생하지 않도록 주의해야 한다.
- 각 쓰레드가 효율적으로 고르게 실행될 수 있게 해야한다.

쓰레드의 구현과 실행
1. Thread클래스를 상속
    class MyThread extends Thread {
        public void run() { 작업내용 }
    }

     MyThread1 th1 = new MyThread1();
            th1.start();
2. Runnable 인터페이스를 구현
class MyRunner1 implements Runnable { 작업내용 }

 MyRunner1 r = new MyRunner1();
        Thread th2 = new Thread(r);
        th2.start();

start()와 run()
start는 메소드가 실행되기위한 환경(call stack 생성)을 만들어주고 run을 실행시킨다











